tax <- read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE)
tax[1:5,1:5]
phyloseq(otu_table(otu), tax_table(tax))
tax <- read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE,row.names = 1)
table(tax[,1])
which(table(tax[,1])==2)
which(table(tax[,1])>1)
tax
head(tax[,1])
which(table(tax[,1])>1)
which(table(tax[,2])>1)
which(table(tax[,3])>1)
which(table(tax[,2])>1)
which(table(as.character(tax[,1]))>1)
which(table(as.character(tax[,0]))>1)
tax[,1]
tax <- read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t')
tax[,1]
rownames(tax)
pitfoam <- phyloseq(otu_table(otu), tax_table(tax))
which(table(as.character(rownames(tax)))>1)
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax))
otu[1:5,1:5]
tax[1:5,1:5]
phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax))
phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax))
?phyloseq
read.table("~/HPCC_Transfer/fixed_inputs/sample_information.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t')
sinfo <- read.table("~/HPCC_Transfer/fixed_inputs/sample_information.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t')
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
, row.names = 1
otu <- read.table("~/HPCC_Transfer/fixed_inputs/otu_table.txt", header = TRUE)
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
otu[1:5,1:5]
otu[1:5,2]
str(otu[1:5,2])
otu <- read.table("~/HPCC_Transfer/fixed_inputs/otu_table.txt", header = TRUE, row.names = 1)
tax
tax <- read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE, sep = '\t')
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
otu <- read.table("~/HPCC_Transfer/fixed_inputs/otu_table.txt", header = TRUE, row.names = 1)
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
otu <- read.table("~/HPCC_Transfer/fixed_inputs/otu_table.txt", header = TRUE)
tax <- read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t')
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
pitfoam <- phyloseq(otu_table(otu[,-1], taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
pitfoam
tax[1:5,1:5]
sort(rownames(tax))
order(sort(rownames(tax)))
rownames(tax)
order(rownames(tax))
sort(order(rownames(tax)))
rownames(tax)[sort(order(rownames(tax)))]
rownames(tax)[order(rownames(tax))]
tax[order(rownames(tax))]
tax[order(rownames(tax)),]
otu[order(otu[,1]), -1]
otu[order(otu[,1]),][1:5,1:5]
otu[order(otu[,1]),-1][1:5,1:5]
pitfoam <- phyloseq(otu_table(otu[order(otu[,1]),-1], taxa_are_rows = TRUE), tax_table(tax[order(rownames(tax)),]), sample_data(sinfo))
otu[order(otu[,1]),-1]
order(otu[,1])
pitfoam <- phyloseq(otu_table(otu[order(otu[,1]),-1]), tax_table(tax[order(rownames(tax)),]), sample_data(sinfo))
pitfoam <- phyloseq(otu_table(otu[order(otu[,1]),-1], taxa_are_rows = TRUE), tax_table(tax[order(rownames(tax)),]))
tax[order(rownames(tax)),]
pitfoam <- phyloseq(otu_table(as.matrix(otu[order(otu[,1]),-1], taxa_are_rows = TRUE)), tax_table(tax[order(rownames(tax)),]))
otu_table(as.matrix(otu[order(otu[,1]),-1], taxa_are_rows = TRUE))
pitfoam <- phyloseq(otu_table(as.matrix(otu[order(otu[,1]),-1]), taxa_are_rows = TRUE), tax_table(tax[order(rownames(tax)),]))
tax <- as.matrix(read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t'))
tax
pitfoam <- phyloseq(otu_table(as.matrix(otu[order(otu[,1]),-1]), taxa_are_rows = TRUE), tax_table(tax[order(rownames(tax)),]))
otu <- as.matrix(read.table("~/HPCC_Transfer/fixed_inputs/otu_table.txt", header = TRUE, row.names = 1))
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax))
otu <- as.matrix(read.table("~/HPCC_Transfer/fixed_inputs/otu_table.txt", header = TRUE, row.names = 1))
tax <- as.matrix(read.table("~/HPCC_Transfer/fixed_inputs/taxa_table.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t'))
sinfo <- read.table("~/HPCC_Transfer/fixed_inputs/sample_information.txt", header = TRUE, fill = TRUE, row.names = 1, sep = '\t')
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax))
pitfoam
pitfoam <- phyloseq(otu_table(otu, taxa_are_rows = TRUE), tax_table(tax), sample_data(sinfo))
saveRDS(object = pitfoam, file = "data/pitfom.RDS")
pitfoam <- readRDS("data/pitfom.RDS")
nashua <- readRDS("data/nashua.column.raw.otu.taxa.RDS")
pitfoam <- readRDS("data/pitfom.RDS")
sample_data(pitfoam)
nashua
phyloseq_objects <- list(nashua, pitfoam)
sources <- c("matrix", "all")
treatments <- c("manure", "all")
source("~/Dropbox/scripts/find_phyloseq_generalists.R")
phyloseq_objects <- list(...)
source_otus <- list()
non_source_otus <- list()
sources
treatments
dataset <- 1
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
columns <- c("matrix", "all")
treatments <- c("manure", "all")
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
source_otus
phyloseq_objects[[na]]
phyloseq_objects[[NA]]
columns[NA]
columns[]
columns[NA]
pitfoam
sample_data(pitfoam)
columns <- c("matrix", NA)
treatments <- c("manure", NA)
treatments[2]
dataset
columns[dataset] != NA
columns[dataset]
is.na(columns[dataset])
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
dataset <- 2
dataset
is.na(columns[dataset]
!(is.na(columns[dataset]))
is.na(columns[dataset])
find_generalists(phyloseq_objects[[dataset]]
)
phyloseq_objects
find_generalists(phyloseq_objects[[dataset]])
phyloseq_objects[[dataset]]
taxa_sums(pitfoam)
sum(taxa_sums(pitfoam) == 0)
source("~/Dropbox/scripts/find_phyloseq_generalists.R")
find_generalists(phyloseq_objects[[dataset]])
find_generalists(phyloseq_objects[[dataset]])
phyloseq_objects
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
try(subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))))
non_source_otus[[dataset]] <- try(subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))))
try(subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))))
try(NA +1)
try("a" + 1)
non_source_otus[[dataset]] <- try(subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))))
phyloseq_objects[[dataset]] == source_otus[[dataset]]
!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))
sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
is.na(columns[dataset])
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NULL}
non_source_otus
source_otus
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
non_source_otus
for(dataset in 1:length(phyloseq_objects)){
if(is.na(columns[dataset])){
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
} else {
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
}
### FIGURE OUT HOW TO MERGE THESE FROM BEING IN A LIST ###
source_otus <- merge_phyloseq()
}
length(phyloseq_objects)
source_otus
non_source_otus
source_otus <- list()
non_source_otus <- list()
for(dataset in 1:length(phyloseq_objects)){
if(is.na(columns[dataset])){
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
} else {
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
}
### FIGURE OUT HOW TO MERGE THESE FROM BEING IN A LIST ###
source_otus <- merge_phyloseq()
}
for(dataset in 1:length(phyloseq_objects)){
print(dataset)
if(is.na(columns[dataset])){
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
} else {
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
}
### FIGURE OUT HOW TO MERGE THESE FROM BEING IN A LIST ###
source_otus <- merge_phyloseq()
}
for(dataset in 1:length(phyloseq_objects)){
print(dataset)
if(is.na(columns[dataset])){
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
} else {
source_otus[[dataset]] <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]]))) != 0){non_source_otus[[dataset]] <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(source_otus[[dataset]])))
} else {non_source_otus[[dataset]] <- NA}
}
### FIGURE OUT HOW TO MERGE THESE FROM BEING IN A LIST ###
# source_otus <- merge_phyloseq()
}
source_otus
non_source_otus
dataset
is.na(columns[dataset])
sources[[dataset]] <- find_generalists(phyloseq_objects[[dataset]])
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]]))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]])))
} else {non_sources <- NA}
sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]])))
sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]])))
} else {non_sources <- NA}
source_otus <- source
non_source_otus <- non_sources
source_otus <- merge_phyloseq(source_otus, source)
source_otus
source
source_otus <- merge_phyloseq(source_otus, source)
merge_phyloseq()
merge_phyloseq
?merge_phyloseq
source_otus <- merge_phyloseq(source_otus, sources)
source_otus
sources
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
non_sources
dataset=1
is.na(columns[dataset])
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects) %in% sample_names(sources[[dataset]]))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]])))
} else {non_sources <- NA}
if(sum(!(sample_names(phyloseq_objects) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]])))
} else {non_sources <- NA}
source_otus <- source
non_source_otus <- non_sources
source_otus
source_otus <- sources
source_otus
non_source_otus
sum(!(sample_names(phyloseq_objects) %in% sample_names(sources)))
sample_names(phyloseq_objects) %in% sample_names(sources))
sample_names(phyloseq_objects) %in% sample_names(sources)\
sample_names(phyloseq_objects) %in% sample_names(sources)
sources
phyloseq_objects
sample_names(phyloseq_objects[[dataset]])
sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))
)
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources[[dataset]])))
} else {non_sources <- NA}
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NA}
dataset
source_otus <- sources
non_source_otus <- non_sources
non_source_otus
source_otus
dataset=2
is.na(columns[dataset])
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NA}
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
source_otus <- merge_phyloseq(source_otus, sources)
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
non_source_otus
non_sources
sources
source_otus
source("~/Dropbox/phyloseq_scripts/find_phyloseq_generalists.R")
merge_phyloseq(NA, NA)
try(merge_phyloseq(NA, NA))
NA & NA
NA && NA
is.na(NA && NA)
is.na(NA & NA)
is.na(NA & 1)
is.na(NA && 1)
NA && 1
non_sources
non_sources <- NULL
non_sources
merge_phyloseq(non_source_otus, non_sources)
sum(NA,1)
sum(NULL,1)
sum(length(NULL),1)
sum(length(NULL),length(1))
sum(length(NULL),length(sources))
length(sources)
sum(length(source_otus), length(sources)) > 0
for(dataset in 1:length(phyloseq_objects)){
if(is.na(columns[dataset])){
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
} else {
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
}
if(dataset == 1){
source_otus <- sources
non_source_otus <- non_sources
} else {
if(sum(length(source_otus), length(sources)) > 0){
source_otus <- merge_phyloseq(source_otus, sources)
} else {source_otus <- source_otus}
source_otus <- merge_phyloseq(source_otus, sources)
if(sum(length(non_source_otus), length(non_sources)) > 0){
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
} else {non_source_otus <- non_source_otus}
}
}
non_source_otus
source_otus
non_source_otus
for(dataset in 1:length(phyloseq_objects)){
if(is.na(columns[dataset])){
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
} else {
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
}
if(dataset == 1){
source_otus <- sources
non_source_otus <- non_sources
} else {
if(sum(length(source_otus), length(sources)) > 0){
source_otus <- merge_phyloseq(source_otus, sources)
} else {source_otus <- source_otus}
source_otus <- merge_phyloseq(source_otus, sources)
if(sum(length(non_source_otus), length(non_sources)) > 0){
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
} else {non_source_otus <- non_source_otus}
}
}
source_otus
non_source_otus
nashua
pitfoam
547+482
548+478
sample_names(nashua)
as.character(phyloseq_objects[1])
nashua <- readRDS("data/nashua.column.raw.otu.taxa.RDS")
pitfoam <- readRDS("data/pitfom.RDS")
phyloseq_objects <- list(nashua, pitfoam)
columns <- c("matrix", NA)
treatments <- c("manure", NA)
a <- function(...){
sapply(substitute(list(...))[-1], deparse)
}
a(nashua, pitfoam)
a(nashua, pitfoam)[2]
phyloseq_objects
p_objects_names <- a(nashua, pitfoam)[2]
p_objects_names
p_objects_names <- a(nashua, pitfoam)
p_objects_names
dataset <- 1
paste0(p_objects_names[dataset], sample_names(phyloseq_objects[[dataset]])
)
paste0(p_objects_names[dataset], sample_names(phyloseq_objects[[dataset]]), sep = "_")
paste0(p_objects_names[dataset], "_", sample_names(phyloseq_objects[[dataset]]))
p_objects_names
phyloseq_objects
for(dataset in 1:length(phyloseq_objects)){
sample_names(phyloseq_objects[[dataset]]) <- paste0(p_objects_names[dataset], "_", sample_names(phyloseq_objects[[dataset]]))
if(is.na(columns[dataset])){
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
} else {
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
}
if(dataset == 1){
source_otus <- sources
non_source_otus <- non_sources
} else {
if(sum(length(source_otus), length(sources)) > 0){
source_otus <- merge_phyloseq(source_otus, sources)
} else {source_otus <- source_otus}
source_otus <- merge_phyloseq(source_otus, sources)
if(sum(length(non_source_otus), length(non_sources)) > 0){
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
} else {non_source_otus <- non_source_otus}
}
}
source("~/Dropbox/phyloseq_scripts/find_phyloseq_generalists.R")
source("../phyloseq_scripts/find_phyloseq_generalists.R")
for(dataset in 1:length(phyloseq_objects)){
sample_names(phyloseq_objects[[dataset]]) <- paste0(p_objects_names[dataset], "_", sample_names(phyloseq_objects[[dataset]]))
if(is.na(columns[dataset])){
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
} else {
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
}
if(dataset == 1){
source_otus <- sources
non_source_otus <- non_sources
} else {
if(sum(length(source_otus), length(sources)) > 0){
source_otus <- merge_phyloseq(source_otus, sources)
} else {source_otus <- source_otus}
source_otus <- merge_phyloseq(source_otus, sources)
if(sum(length(non_source_otus), length(non_sources)) > 0){
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
} else {non_source_otus <- non_source_otus}
}
}
source_otus
non_source_otus
taxa_names(source_otus)
for(dataset in 1:length(phyloseq_objects)){
sample_names(phyloseq_objects[[dataset]]) <- paste0(p_objects_names[dataset], "_", sample_names(phyloseq_objects[[dataset]]))
taxa_names(phyloseq_objects[[dataset]]) <- paste0(p_objects_names[dataset], "_", taxa_names(phyloseq_objects[[dataset]]))
if(is.na(columns[dataset])){
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
} else {
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
}
if(dataset == 1){
source_otus <- sources
non_source_otus <- non_sources
} else {
if(sum(length(source_otus), length(sources)) > 0){
source_otus <- merge_phyloseq(source_otus, sources)
} else {source_otus <- source_otus}
source_otus <- merge_phyloseq(source_otus, sources)
if(sum(length(non_source_otus), length(non_sources)) > 0){
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
} else {non_source_otus <- non_source_otus}
}
}
taxa_names(source_otus)
taxa_names(source_otus) %in% taxa_names(non_source_otus)
sum(!taxa_names(source_otus) %in% taxa_names(non_source_otus)))
sum(!taxa_names(source_otus) %in% taxa_names(non_source_otus))
sum(!(taxa_names(source_otus) %in% taxa_names(non_source_otus)))
sum((taxa_names(source_otus) %in% taxa_names(non_source_otus)))
filter_taxa(source_otus, (!(taxa_names(source_otus) %in% taxa_names(non_source_otus))), TRUE)
?subset_taxa
subset_taxa(source_otus, (!(taxa_names(source_otus) %in% taxa_names(non_source_otus))))
source_otus
source_otus <- subset_taxa(source_otus, (!(taxa_names(source_otus) %in% taxa_names(non_source_otus))))
find_generalists(source_otus)
?tax_glom
rank_names(physeq)[1]
rank_names(source_otus)[1]
rank_names(source_otus)
rank_names(source_otus)[length(rank_names(source_otus))]
tax_glom(source_otus, taxrank = rank_names(source_otus)[length(rank_names(source_otus))])
find_unique_otus <- function(..., columns, treatments){
require(phyloseq)
source("../phyloseq_scripts/find_phyloseq_generalists.R")
phyloseq_objects <- list(...)
p_objects_names <- sapply(substitute(list(...))[-1], deparse)
for(dataset in 1:length(phyloseq_objects)){
sample_names(phyloseq_objects[[dataset]]) <- paste0(p_objects_names[dataset], "_", sample_names(phyloseq_objects[[dataset]]))
taxa_names(phyloseq_objects[[dataset]]) <- paste0(p_objects_names[dataset], "_", taxa_names(phyloseq_objects[[dataset]]))
if(is.na(columns[dataset])){
sources <- find_generalists(phyloseq_objects[[dataset]])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
} else {
sources <- find_generalists(phyloseq_objects[[dataset]], treatments = as.character(columns[dataset]), subset = treatments[dataset])
if(sum(!(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources))) != 0){non_sources <- subset_samples(phyloseq_objects[[dataset]], !(sample_names(phyloseq_objects[[dataset]]) %in% sample_names(sources)))
} else {non_sources <- NULL}
}
if(dataset == 1){
source_otus <- sources
non_source_otus <- non_sources
} else {
if(sum(length(source_otus), length(sources)) > 0){
source_otus <- merge_phyloseq(source_otus, sources)
} else {source_otus <- source_otus}
source_otus <- merge_phyloseq(source_otus, sources)
if(sum(length(non_source_otus), length(non_sources)) > 0){
non_source_otus <- merge_phyloseq(non_source_otus, non_sources)
} else {non_source_otus <- non_source_otus}
}
}
taxa_names(source_otus) %in% taxa_names(non_source_otus)
source_otus <- subset_taxa(source_otus, (!(taxa_names(source_otus) %in% taxa_names(non_source_otus))))
source_otus <- tax_glom(source_otus, taxrank = rank_names(source_otus)[length(rank_names(source_otus))])
}
